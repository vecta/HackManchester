@using Microsoft.Owin.Security
@model Kitbag.HackWebApplication.Models.ExternalLoginListViewModel
<style>
    body
     #socialLoginList #Google{ background: linear-gradient(#d34836, #903125); text-align: left }
    #socialLoginList #Facebook{ background: linear-gradient(#4265ad, #3b5998); text-align: left }
    #socialLoginList #Twitter{ background: linear-gradient(#55ACEE, #50a2e1); text-align: left }
    .SocialIcon{ width: 25px; margin-right: 20px; }
    #socialLoginList{ background-color: #808080; margin: 150px auto; width: 500px; padding: 60px 20px; border-radius: 8px; box-shadow: 5px 5px 20px 0px rgba(0, 0, 0, 0.25); color:white }
</style>
<h4>Use another service to log in.</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (!loginProviders.Any())
    {
        <div>
            <p>There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.</p>
        </div>
    }
    else
    {
        using (Html.BeginForm(Model.Action, "Account", new {Model.ReturnUrl}))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList" class="btn-group-vertical">
                @foreach (var p in loginProviders)
                {
                    <button type="submit" class="btn btn-lg" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><img src="Content/images/social/@(p.AuthenticationType).png" class="SocialIcon" />Sign in with @p.AuthenticationType</button>
                }
            </div>
        }
    }
}